{"version":3,"sources":["components/InputPeople.module.css","components/TipButton.module.css","components/InputBill.module.css","components/InputTip.module.css","media/logo.svg","components/InputPeople.tsx","components/InputBill.tsx","components/TipButton.tsx","components/InputTip.tsx","App.tsx","index.tsx"],"names":["module","exports","InputPeople","state","setState","maxValue","inputClass","cx","styles","type","className","onChange","e","character","nativeEvent","data","test","currentValue","parseInt","toString","onKeyDown","key","newValue","slice","length","value","InputBill","rest","toFixed","parseFloat","TipButton","text","btnClass","custom","onClick","InputTip","placeholder","tipAmount","bill","tip","people","totalPerPerson","App","useState","setBill","setPeople","setTip","useEffect","document","documentElement","style","setProperty","src","Logo","alt","title","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d91541c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputPeople_input__1HVuD\",\"warning\":\"InputPeople_warning__2BkiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TipButton_button__2ro10\",\"tip-active\":\"TipButton_tip-active__18fVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputBill_input__1HVGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputTip_input__2IC0U\"};","export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import React from \"react\";\r\nimport { InputPropsType } from \"../types/Types\";\r\n//@ts-ignore\r\nimport styles from \"./InputPeople.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nexport default function InputPeople({\r\n  state,\r\n  setState,\r\n  maxValue\r\n}: InputPropsType) {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const character = (e.nativeEvent as InputEvent).data;\r\n\r\n    if (character && /\\d/.test(character)) {\r\n      const currentValue = parseInt(state.toString() + character, 10);\r\n\r\n      // limit\r\n      if (currentValue <= maxValue) setState(currentValue);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Backspace\") {\r\n      if (state > 0) {\r\n        const newValue = state.toString();\r\n        setState(parseInt(newValue.slice(0, newValue.length - 1) || \"0\", 10));\r\n      }\r\n    }\r\n  };\r\n\r\n  const inputClass = cx({\r\n    [styles[\"input\"]]: true,\r\n    [styles[\"warning\"]]: state === 0\r\n  });\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className={inputClass}\r\n      onChange={handleChange}\r\n      onKeyDown={handleKeyDown}\r\n      aria-label=\"People\"\r\n      value={state}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { InputPropsType } from \"../types/Types\";\r\n//@ts-ignore\r\nimport styles from \"./InputBill.module.css\";\r\n\r\nexport default function InputBill({\r\n  state,\r\n  setState,\r\n  maxValue,\r\n  ...rest\r\n}: InputPropsType) {\r\n  const handleBillInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const character = (e.nativeEvent as InputEvent).data;\r\n\r\n    if (character && /\\d/.test(character)) {\r\n      let newValue = (state * 10).toFixed(2);\r\n      newValue = newValue.slice(0, newValue.length - 1) + character;\r\n\r\n      if (parseFloat(newValue) <= maxValue) setState(parseFloat(newValue));\r\n    }\r\n  };\r\n\r\n  const handleBillBackspace = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Backspace\") {\r\n      if (state > 0) {\r\n        let newValue = state.toString();\r\n\r\n        newValue =\r\n          newValue.slice(0, newValue.length - 3) +\r\n          newValue[newValue.length - 2];\r\n\r\n        setState(parseFloat(newValue) / 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className={styles[\"input\"]}\r\n      onChange={handleBillInput}\r\n      onKeyDown={handleBillBackspace}\r\n      value={state.toFixed(2)}\r\n      aria-label=\"Bill\"\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport type { ButtonPropsType } from \"../types/Types\";\r\n//@ts-ignore\r\nimport styles from \"./TipButton.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nexport default function TipButton({\r\n  text,\r\n  value,\r\n  state,\r\n  setState\r\n}: ButtonPropsType) {\r\n  function onClick(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    setState({\r\n      value,\r\n      custom: false\r\n    });\r\n  }\r\n\r\n  /*\r\n    The 'tip-active' class will be used when the tip is not custom (input)\r\n    and the value of the tip is the same of the button's value\r\n  */\r\n  const btnClass = cx({\r\n    [styles[\"button\"]]: true,\r\n    [styles[\"tip-active\"]]: !state.custom && state.value === value\r\n  });\r\n\r\n  return (\r\n    <button className={btnClass} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { InputTipPropsType } from \"../types/Types\";\r\n//@ts-ignore\r\nimport styles from \"./InputTip.module.css\";\r\n\r\nexport default function InputTip({\r\n  state,\r\n  setState,\r\n  maxValue\r\n}: InputTipPropsType) {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const character = (e.nativeEvent as InputEvent).data;\r\n\r\n    if (character && /\\d/.test(character)) {\r\n      let currentValue = parseInt(character, 10);\r\n      if (state.custom)\r\n        currentValue = parseInt(state.value.toString() + character, 10);\r\n\r\n      // limit\r\n      if (currentValue <= maxValue)\r\n        setState({ value: currentValue, custom: true });\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Backspace\") {\r\n      if (state.value > 0) {\r\n        const newValue = state.value.toString();\r\n        setState({\r\n          ...state,\r\n          value: parseInt(newValue.slice(0, newValue.length - 1) || \"0\", 10)\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Custom\"\r\n      className={styles[\"input\"]}\r\n      value={state.custom ? state.value + \"%\" : \"\"}\r\n      onChange={handleChange}\r\n      onKeyDown={handleKeyDown}\r\n    />\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\nimport Logo from \"./media/logo.svg\";\n\nimport InputPeople from \"./components/InputPeople\";\nimport InputBill from \"./components/InputBill\";\nimport TipButton from \"./components/TipButton\";\nimport InputTip from \"./components/InputTip\";\n\nimport type { TipType } from \"./types/Types\";\n\nfunction tipAmount(bill: number, tip: number, people: number): number {\n  if (people === 0) return 0;\n\n  const totalTip = (bill * tip) / 100;\n  const tipPerPerson = totalTip / people;\n\n  return tipPerPerson;\n}\n\nfunction totalPerPerson(bill: number, tip: number, people: number): number {\n  if (people === 0) return 0;\n\n  let totalPerPerson = bill + bill * (tip / 100);\n  totalPerPerson = totalPerPerson / people;\n\n  return totalPerPerson;\n}\n\nexport default function App() {\n  const [bill, setBill] = useState(0);\n  const [people, setPeople] = useState(1);\n  const [tip, setTip] = useState<TipType>({ value: 5, custom: false });\n\n  const handleReset = () => {\n    setBill(0);\n    setPeople(1);\n    setTip({ value: 5, custom: false });\n  };\n\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      \"--errorMessageDisplay\",\n      !people ? \"block\" : \"none\"\n    );\n  }, [people]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>\n          <picture>\n            <img src={Logo} alt=\"Logo\" />\n          </picture>\n        </h1>\n      </header>\n      <main>\n        <section className=\"controls\">\n          <div>\n            <p className=\"topZero\">Bill</p>\n            <InputBill\n              state={bill}\n              setState={setBill}\n              maxValue={1_000_000}\n              title=\"Max value: 1.000.000\"\n            />\n          </div>\n          <div>\n            <p>Select Tip %</p>\n            <div className=\"tips\">\n              <TipButton text=\"5%\" value={5} state={tip} setState={setTip} />\n              <TipButton text=\"10%\" value={10} state={tip} setState={setTip} />\n              <TipButton text=\"15%\" value={15} state={tip} setState={setTip} />\n              <TipButton text=\"25%\" value={25} state={tip} setState={setTip} />\n              <TipButton text=\"50%\" value={50} state={tip} setState={setTip} />\n              <InputTip state={tip} setState={setTip} maxValue={100} />\n            </div>\n          </div>\n          <div>\n            <div className=\"labelPeople\">\n              <p>Number of People</p>\n              <p className=\"errorMessage\">Can't be zero</p>\n            </div>\n            <InputPeople\n              state={people}\n              setState={setPeople}\n              maxValue={1_000}\n              title=\"Max value: 1.000\"\n            />\n          </div>\n        </section>\n        <section className=\"result\">\n          <div className=\"tip-label\">\n            Tip Amount<span>/ person</span>\n          </div>\n          <div className=\"tip-result\" id=\"amount-person\">\n            ${tipAmount(bill, tip.value, people).toFixed(2)}\n          </div>\n          <div className=\"total-label\">\n            Total<span>/ person</span>\n          </div>\n          <div className=\"total-result\" id=\"total-person\">\n            ${totalPerPerson(bill, tip.value, people).toFixed(2)}\n          </div>\n          <button className=\"button-reset\" onClick={handleReset}>\n            RESET\n          </button>\n        </section>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}